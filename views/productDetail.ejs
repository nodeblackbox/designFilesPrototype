<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title><%= product.name %> Details</title>
    <script src="https://js.stripe.com/v3/"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.7.0/p5.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.7.0/addons/p5.sound.min.js"></script>
    <style>
      @import url("https://fonts.googleapis.com/css2?family=League+Spartan:wght@400;500;600;700;800;900&display=swap");

      *,
      *::after,
      *::before {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
      }

      html,
      body {
        height: 100%;
        min-height: 100vh;
      }

      body {
        display: grid;
        place-items: center;
        font-family: "League Spartan", system-ui, sans-serif;
        font-size: 1.1rem;
        line-height: 1.2;
        background-color: #212121;
        color: #ddd;
      }

      ul {
        list-style: none;
      }

      .main {
        max-width: 75rem;
        padding: 3em 1.5em;
      }

      .main__heading {
        font-weight: 600;
        font-size: 2.25em;
        margin-bottom: 0.75em;
        text-align: center;
        color: #eceff1;
      }

      .PricingCards {
        position: relative;
      }

      .PricingCards__inner {
        display: flex;
        flex-wrap: wrap;
        gap: 2.5em;
      }

      .PricingCard {
        --flow-space: 0.5em;
        --hsl: var(--hue), var(--saturation), var(--lightness);
        flex: 1 1 14rem;
        padding: 1.5em 2em;
        display: grid;
        grid-template-rows: auto auto auto 1fr;
        align-items: start;
        gap: 1.25em;
        color: #eceff1;
        background-color: #2b2b2b;
        border: 1px solid #eceff133;
        border-radius: 15px;
      }

      .PricingCard:nth-child(1) {
        --hue: 165;
        --saturation: 82.26%;
        --lightness: 51.37%;
      }

      .PricingCard:nth-child(2) {
        --hue: 291.34;
        --saturation: 95.9%;
        --lightness: 61.76%;
      }

      .PricingCard:nth-child(3) {
        --hue: 338.69;
        --saturation: 100%;
        --lightness: 48.04%;
      }

      .PricingCard__bullets {
        line-height: 1.4;
      }

      .PricingCard__bullets li::before {
        display: inline-block;
        content: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512' width='16' title='check' fill='%23dddddd'%3E%3Cpath d='M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z' /%3E%3C/svg%3E");
        transform: translatey(0.25ch);
        margin-right: 1ch;
      }

      .PricingCard__heading {
        font-size: 1.05em;
        font-weight: 600;
      }

      .PricingCard__price {
        font-size: 1.75em;
        font-weight: 700;
      }

      .flow > * + * {
        margin-top: var(--flow-space, 1.25em);
      }

      .cta {
        display: block;
        align-self: end;
        margin: 1em 0 0.5em 0;
        text-align: center;
        text-decoration: none;
        color: #fff;
        background-color: #0d0d0d;
        padding: 0.7em;
        border-radius: 10px;
        font-size: 1rem;
        font-weight: 600;
      }

      .overlay {
        position: absolute;
        inset: 0;
        pointer-events: none;
        user-select: none;
        opacity: var(--opacity, 0);
        -webkit-mask: radial-gradient(
          25rem 25rem at var(--x) var(--y),
          #000 1%,
          transparent 50%
        );
        mask: radial-gradient(
          25rem 25rem at var(--x) var(--y),
          #000 1%,
          transparent 50%
        );
        transition: 400ms mask ease;
        will-change: mask;
      }

      .overlay .PricingCard {
        background-color: hsla(var(--hsl), 0.15);
        border-color: hsla(var(--hsl), 1);
        box-shadow: 0 0 0 1px inset hsl(var(--hsl));
      }

      .overlay .cta {
        display: block;
        grid-row: -1;
        width: 100%;
        background-color: hsl(var(--hsl));
        box-shadow: 0 0 0 1px hsl(var(--hsl));
      }

      :not(.overlay) > .PricingCard {
        transition: 400ms background ease;
        will-change: background;
      }

      :not(.overlay) > .PricingCard:hover {
        --lightness: 95%;
        background: hsla(var(--hsl), 0.1);
      }
    </style>
    <meta charset="utf-8" />
  </head>
  <body>


        <!-- @@@@@@@@@@@@@@@@@@@@@@@@ -->
    <h1><%= product.name %></h1>
    <div class="product-detail">
      <p><%= product.description %></p>
      <p>Price: £<%= product.price %></p>
      <button onclick="initiateCheckout('<%- product.id %>')">Buy Now</button>
    </div>


    <div class="PricingCards__PricingCard PricingCard">
      <h2 class="PricingCard__heading">Expert</h2>
       <h1><%= product.name %></h1>
      <p class="PricingCard__price">$29.99</p>
      <ul role="list" class="PricingCard__bullets flow">
        <p>Price: £<%= product.price %></p>
        <p><%= product.description %></p>
        <li>Access to all AI models and features</li>
        <li>24/7 Priority support</li>
        <li>Monthly AI model optimization session</li>
        <li>Exclusive content and early access to new models</li>
      </ul>
      <button onclick="initiateCheckout('<%- product.id %>')">Buy Now</button>
       <a href="/product/<%= product.id %>" class="PricingCard__cta cta"
              >Choose Plan</a
            >
    </div>
    <!-- @@@@@@@@@@@@@@@@@@@@@@@@ -->
    <script>
      async function initiateCheckout(productId) {
        try {
          const response = await fetch(`/checkout/${productId}`, {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ productId }),
          });
          const data = await response.json();
          window.location.href = data.url;
        } catch (error) {
          console.error("Error:", error);
        }
      }

      const PricingCardsContainer = document.querySelector(".PricingCards");
      const PricingCardsContainerInner = document.querySelector(
        ".PricingCards__inner"
      );
      const PricingCards = Array.from(
        document.querySelectorAll(".PricingCard")
      );
      const overlay = document.querySelector(".overlay");

      const applyOverlayMask = (e) => {
        const overlayEl = e.currentTarget;
        const x = e.pageX - PricingCardsContainer.offsetLeft;
        const y = e.pageY - PricingCardsContainer.offsetTop;

        overlayEl.style = `--opacity: 1; --x: ${x}px; --y:${y}px;`;
      };

      const createOverlayCta = (overlayPricingCard, ctaEl) => {
        const overlayCta = document.createElement("div");
        overlayCta.classList.add("cta");
        overlayCta.textContent = ctaEl.textContent;
        overlayCta.setAttribute("aria-hidden", true);
        overlayPricingCard.append(overlayCta);
      };

      const observer = new ResizeObserver((entries) => {
        entries.forEach((entry) => {
          const PricingCardIndex = PricingCards.indexOf(entry.target);
          let width = entry.borderBoxSize[0].inlineSize;
          let height = entry.borderBoxSize[0].blockSize;

          if (PricingCardIndex >= 0) {
            overlay.children[PricingCardIndex].style.width = `${width}px`;
            overlay.children[PricingCardIndex].style.height = `${height}px`;
          }
        });
      });

      const initOverlayPricingCard = (PricingCardEl) => {
        const overlayPricingCard = document.createElement("div");
        overlayPricingCard.classList.add("PricingCard");
        createOverlayCta(overlayPricingCard, PricingCardEl.lastElementChild);
        overlay.append(overlayPricingCard);
        observer.observe(PricingCardEl);
      };

      PricingCards.forEach(initOverlayPricingCard);
      document.body.addEventListener("pointermove", applyOverlayMask);
    </script>
  </body>
</html>




